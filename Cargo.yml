package:

  # When releasing to crates.io:
  #
  # - Update CHANGELOG.md.
  # - Update version numbers in Cargo.yml, Cargo.toml, install section of readme.
  # - verify CI result
  # - test dependent crates
  # - cargo publish
  # - merge dev branch into master
  # - create git tag
  #
  version       : 0.1.0
  name          : thespis_impl
  edition       : '2018'
  authors       : [ Naja Melan <najamelan@autistici.org> ]
  description   : Reference implementation for the thespis actor model
  license       : Unlicense
  homepage      : https://github.com/thespis-rs/thespis_impl
  repository    : https://github.com/thespis-rs/thespis_impl
  documentation : https://docs.rs/thespis_impl
  readme        : README.md
  keywords      : [ async, futures, actor, thespis ]
  categories    : [ Asynchronous, Concurrency ]

  metadata:
    docs:
      rs:
        features: [ external_doc ]


badges:

  maintenance : { status     : actively-developed      }
  travis-ci   : { repository : thespis-rs/thespis_impl }


features:

  default: []

  # only used internally, don't use
  #
  external_doc: []

  # Add convenience methods that allow creating Addr and starting actors with less boilerplate.
  #
  tokio_channel: [ tokio/sync, tokio/stream, async_chanx ]


lib:

  bench: false


dependencies:

  thespis     : { path: ../thespis }
  futures     : { version: ^0.3, features: [ std, compat ], default-features: false }
  log         : ^0.4
  # regex       : { version: ^1, features: [ pattern ] }
  once_cell   : ^1
  thiserror   : ^1
  anyhow      : ^1
  tokio       : { version: ^0.2, optional: true }
  async_chanx : { path: ../../async_chanx, optional: true }
  async_executors : { version: ^0.2, features: [spawn_handle] }

target:

  'cfg(target_arch = "wasm32")':

    dependencies:

      wasm-bindgen-futures: { version: ^0.4 }


dev-dependencies:

  async_chanx       : { path: ../../async_chanx }
  pretty_assertions : ^0.6
  flexi_logger      : ^0.15
  async_executors   : { version: ^0.2, features: [localpool, threadpool, async_std, tokio_ct, spawn_handle] }
  async-std         : { version: ^1, features: [ attributes ] }
  simple_logger     : ^1
  futures           : { version: ^0.3, features: [ thread-pool ], default-features: false }

  # for benchmarks
  #
  actix-rt          : ^1
  actix             : ^0.10.0-alpha
  criterion         : { version: ^0.3, features: [] }
  tokio             : { version: ^0.2, features: [ sync ] }


bench:

  - name   : single_thread_delivery
    path   : benches/single_thread/delivery.rs
    harness: false

  - name   : multi_thread_delivery
    path   : benches/multi_thread/delivery.rs
    harness: false


example:

  - name: actix_perf
    path: examples/perf/actix.rs

  - name: thespis_perf
    path: examples/perf/thespis.rs

  - name: method_perf
    path: examples/perf/method.rs

  - name: thespis_local_perf
    path: examples/perf/thespis_local.rs

  - name: actix_local_perf
    path: examples/perf/actix_local.rs

  - name: thespis_unbounded_perf
    path: examples/perf/thespis_unbounded.rs

  - name: actix_unbounded_perf
    path: examples/perf/actix_unbounded.rs


profile:

  release:

    opt-level    : 3
    codegen-units: 1

    lto          : true
    debug        : true
